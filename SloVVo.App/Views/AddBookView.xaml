<Page x:Class="SloVVo.App.Views.AddBookView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SloVVo.App"
             xmlns:validationRules="clr-namespace:SloVVo.App.ValidationRules"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:viewModels="clr-namespace:SloVVo.Logic.ViewModels;assembly=SloVVo.Logic"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="375" Background="#8C2A27" 
             Width="400" Height="450" 
             DataContext="{Binding AddBookViewModel, Source={StaticResource ViewModelLocator}}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadWindowCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Page.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="0,10"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="10,10"></Setter>
        </Style>
    </Page.Resources>
    <StackPanel Orientation="Vertical" Background="Blue">
        <TextBlock HorizontalAlignment="Center"  FontStyle="Italic" FontWeight="Bold" FontSize="29">Добавяне на Книга</TextBlock>
        <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Vertical" >
                <TextBlock Text="Локация" Height="17.96" FontSize="15" Background="White"></TextBlock>
                <TextBlock Text="Библиотека Nº" Height="17.96" FontSize="15" Background="White"></TextBlock>
                <TextBlock Text="Рафт Nº" Height="17.96" FontSize="15" Background="White"></TextBlock>
                <TextBlock Text="Книга Nº" Height="17.96" FontSize="15" Background="White"></TextBlock>
                <TextBlock Text="Книга име" Height="17.96" FontSize="15" Background="White"></TextBlock>
                <TextBlock Text="Автор" Height="17.96" FontSize="15" Background="White"></TextBlock>
            </StackPanel>

            <StackPanel Orientation="Vertical" Margin="0,10" >
                <ComboBox Name="LocationItem"  Width="100" 
                         Style="{StaticResource CustomErrorControlOnErrorStyleComboBox}" 
                         Margin="8,0,8,15" 
                         DisplayMemberPath="LocationName"
                         SelectedValuePath="LocationId" 
                         SelectedItem="{Binding Book.Location, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                         ItemsSource="{Binding Locations, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                </ComboBox>
                <TextBox Name="BiblioIdText"  Width="100" 
                         Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="8,0,8,15">
                    <Binding Path="Book.BiblioId" Mode="OneWayToSource"  UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True">
                        <Binding.ValidationRules>
                            <validationRules:IsNumberValidationRule ValidatesOnTargetUpdated="True"/>
                            <validationRules:NumberIsNot0ValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBox x:Name="RaftIdText"  Width="100" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="8,7,8,8">
                    <Binding Path="Book.ShelfId" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:IsNumberValidationRule ValidatesOnTargetUpdated="True"/>
                            <validationRules:NumberIsNot0ValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>

                </TextBox>
                <TextBox x:Name="BookIdText"  Width="100"  Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="8,10,8,8">
                    <Binding Path="Book.BookId" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:IsNumberValidationRule ValidatesOnTargetUpdated="True"/>
                            <validationRules:NumberIsNot0ValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBox x:Name="BookNameText" Width="100" Text="{Binding Book.BookName, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="8,12,8,8"/>
                <TextBox x:Name="AuthorText" Text="{Binding Book.AuthorName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="100" Margin="10,12,10,10"
                          Background="White"/>
            </StackPanel>
            <StackPanel Height="250">
            </StackPanel>
        </StackPanel>
        <Button Content="Добави Книга" FontWeight="Medium">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding UploadBookCommand}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF5C99D6"/>
                    <Setter Property="Width" Value="120"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=LocationItem}" Value="False"></Condition>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=BiblioIdText}" Value="False"></Condition>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=RaftIdText}" Value="False"></Condition>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=BookIdText}" Value="False"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </StackPanel>
</Page>

